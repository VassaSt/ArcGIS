//  creation ui for data item
  // <div class="layer-list">
  // <button id="btn" class="layer-list__item">
  //     <div class="item-title__wrap">
  //       <div class="item-marker"></div>
  //       <div class="item-title" id="layer-name"></div>
  //     </div>
  //     <div class="item-eye"></div>
  //   </button>
  // </div>





        buttons = document.querySelectorAll('.item-eye');
        // console.log("buttons : ", buttons);

    let buttonPressed = e => {

      // let layer_id = this.getAttribute('value');
  // console.log("layer_id: ", layer_id);
  // reearth.layers.layers;
  // if (this.classList.contains('item-eye')){
  //   reearth.layers.hide(layer_id);

  //   this.classList.remove('item-eye');
  //   this.classList.add('item-eye__closed');
  // } else {
  //   reearth.layers.show(layer_id);

  //   this.classList.remove('item-eye__closed');
  //   this.classList.add('item-eye');
  // }


      // Get ID of Clicked Element
      let layer_id = e.target.parentElement.id;
      console.log(layer_id);
      console.log(e.target);

    //   // getting properties from selected option 
    //   function onChange() {
    //     var imageUrl = markersList.options[markersList.selectedIndex].value;
    //     var imageSize = markersList.options[markersList.selectedIndex].getAttribute('imageSize');
    //     let imageSizeToNumber = +imageSize;

    //     reearth.layers.overrideProperty((markerId), {
    //       default: {
    //         image: imageUrl,
    //         imageSize: imageSizeToNumber,
    //       }
    //     });

      // }
      // markersList.onchange = onChange;
      // onChange();

    }
    for (let button of buttons) {
      button.addEventListener("click", buttonPressed);
    }


            // document.getElementById(itemTitle__wrapID).addEventListener('click', download);
        // document.getElementById(itemEyeID).addEventListener('click', handleLayer);



              // for (let i = 0; i < geoJsonData.features.length; i++) {
      //   if ((geoJsonData.features[i].geometry.type === "LineString" || "MultiLineString") && (geoJsonData.features[i].geometry.type !== "Point" || "multiPoint") && (geoJsonData.features[i].geometry.type !== "Polygon" || "MultiPolygon")){
      //    console.log("Lines");
      //   } else if ((geoJsonData.features[i].geometry.type === "Point" || "MultiPoint") && (geoJsonData.features[i].geometry.type !== "LineString" || "MultiLineString") && (features[i].geometry.type !== "Polygon" || "MultiPolygon")) {
      //     console.log("Points");
      //   } else if ((geoJsonData.features[i].geometry.type === "Polygon" || "MultiPolygon") && (geoJsonData.features[i].geometry.type !== "LineString" || "MultiLineString")  && (geoJsonData.features[i].geometry.type !== "Point" || "multiPoint")) {
      //     pconsole.log("Polygon");
      //   }
      // }



          // let jsonProperties = JSON.stringify(result);
          // console.log("test", jsonProperties);

        //       if (result) {
        //         let jsonProperties = JSON.stringify(result);
        //     geojson.features.forEach(function (feature) {
        //             feature.properties = JSON.parse(jsonProperties);
        //           })

        //     let geoJsonString = JSON.stringify(geojson);

        //     let blob = new Blob([geoJsonString], { type: 'application/json' });
        //     let link = URL.createObjectURL(blob);

        //   // override
        //   reearth.layers.overrideProperty(layerId, {
        //     default: {
        //       url: link,
        //     },
        //   });
        // } else {
        //   console.log("point");
        // }